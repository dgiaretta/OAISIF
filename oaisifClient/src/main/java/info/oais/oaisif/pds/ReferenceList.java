//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package info.oais.oaisif.pds;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * The Reference_List class provides lists general
 *         references and cross-references for the product.  References
 *         cited elsewhere in the label need not be repeated
 *         here.
 * 
 * <p>Java class for Reference_List complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="Reference_List">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element ref="{http://pds.nasa.gov/pds4/pds/v1}Internal_Reference" maxOccurs="unbounded" minOccurs="0"/>
 *         <element ref="{http://pds.nasa.gov/pds4/pds/v1}External_Reference" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Reference_List", propOrder = {
    "internalReference",
    "externalReference"
})
public class ReferenceList {

    @XmlElement(name = "Internal_Reference")
    protected List<InternalReference> internalReference;
    @XmlElement(name = "External_Reference")
    protected List<ExternalReference> externalReference;

    /**
     * Gets the value of the internalReference property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the internalReference property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getInternalReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InternalReference }
     * </p>
     * 
     * 
     * @return
     *     The value of the internalReference property.
     */
    public List<InternalReference> getInternalReference() {
        if (internalReference == null) {
            internalReference = new ArrayList<>();
        }
        return this.internalReference;
    }

    /**
     * Gets the value of the externalReference property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the externalReference property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getExternalReference().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExternalReference }
     * </p>
     * 
     * 
     * @return
     *     The value of the externalReference property.
     */
    public List<ExternalReference> getExternalReference() {
        if (externalReference == null) {
            externalReference = new ArrayList<>();
        }
        return this.externalReference;
    }

}
