//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package info.oais.oaisif.pds;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * A Document Edition is one complete version of
 *         the document in a set of files that is distinguished by
 *         language, a unique assemblage of file formats, or some other
 *         criteria.
 * 
 * <p>Java class for Document_Edition complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="Document_Edition">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="edition_name" type="{http://pds.nasa.gov/pds4/pds/v1}edition_name"/>
 *         <element name="starting_point_identifier" type="{http://pds.nasa.gov/pds4/pds/v1}starting_point_identifier" minOccurs="0"/>
 *         <element name="language" type="{http://pds.nasa.gov/pds4/pds/v1}language"/>
 *         <element name="files" type="{http://pds.nasa.gov/pds4/pds/v1}files"/>
 *         <element name="description" type="{http://pds.nasa.gov/pds4/pds/v1}description" minOccurs="0"/>
 *         <element name="Document_File" type="{http://pds.nasa.gov/pds4/pds/v1}Document_File" maxOccurs="unbounded"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Document_Edition", propOrder = {
    "editionName",
    "startingPointIdentifier",
    "language",
    "files",
    "description",
    "documentFile"
})
public class DocumentEdition {

    @XmlElement(name = "edition_name", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String editionName;
    @XmlElement(name = "starting_point_identifier")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String startingPointIdentifier;
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String language;
    @XmlElement(required = true)
    @XmlSchemaType(name = "unsignedLong")
    protected BigInteger files;
    protected String description;
    @XmlElement(name = "Document_File", required = true)
    protected List<DocumentFile> documentFile;

    /**
     * Gets the value of the editionName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEditionName() {
        return editionName;
    }

    /**
     * Sets the value of the editionName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEditionName(String value) {
        this.editionName = value;
    }

    /**
     * Gets the value of the startingPointIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getStartingPointIdentifier() {
        return startingPointIdentifier;
    }

    /**
     * Sets the value of the startingPointIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setStartingPointIdentifier(String value) {
        this.startingPointIdentifier = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLanguage(String value) {
        this.language = value;
    }

    /**
     * Gets the value of the files property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getFiles() {
        return files;
    }

    /**
     * Sets the value of the files property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setFiles(BigInteger value) {
        this.files = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDescription(String value) {
        this.description = value;
    }

    /**
     * Gets the value of the documentFile property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the documentFile property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getDocumentFile().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DocumentFile }
     * </p>
     * 
     * 
     * @return
     *     The value of the documentFile property.
     */
    public List<DocumentFile> getDocumentFile() {
        if (documentFile == null) {
            documentFile = new ArrayList<>();
        }
        return this.documentFile;
    }

}
