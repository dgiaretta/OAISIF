//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package info.oais.oaisif.pds;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * The Science_Facets class contains the
 *         science-related search facets.  It is optional and may be
 *         repeated if an product has facets related to, for example, two
 *         different disciplines (as defined by the discipline_name facet).
 *         Note that Science_Facets was modeled with Discipline_Facets as a
 *         component and Discipline_Facets was modeled with Group_Facet1
 *         and Group_Facet2 as components. This dependency hierarchy was
 *         flattened and only Science_Facets exists in the
 *         schema.
 * 
 * <p>Java class for Science_Facets complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="Science_Facets">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="wavelength_range" type="{http://pds.nasa.gov/pds4/pds/v1}wavelength_range" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="domain" type="{http://pds.nasa.gov/pds4/pds/v1}domain" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="discipline_name" type="{http://pds.nasa.gov/pds4/pds/v1}ASCII_Short_String_Collapsed"/>
 *         <element name="facet1" type="{http://pds.nasa.gov/pds4/pds/v1}ASCII_Short_String_Collapsed" minOccurs="0"/>
 *         <element name="subfacet1" type="{http://pds.nasa.gov/pds4/pds/v1}ASCII_Short_String_Collapsed" maxOccurs="unbounded" minOccurs="0"/>
 *         <element name="facet2" type="{http://pds.nasa.gov/pds4/pds/v1}ASCII_Short_String_Collapsed" minOccurs="0"/>
 *         <element name="subfacet2" type="{http://pds.nasa.gov/pds4/pds/v1}ASCII_Short_String_Collapsed" maxOccurs="unbounded" minOccurs="0"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Science_Facets", propOrder = {
    "wavelengthRange",
    "domain",
    "disciplineName",
    "facet1",
    "subfacet1",
    "facet2",
    "subfacet2"
})
public class ScienceFacets {

    @XmlElement(name = "wavelength_range")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected List<String> wavelengthRange;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected List<String> domain;
    @XmlElement(name = "discipline_name", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String disciplineName;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String facet1;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected List<String> subfacet1;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected String facet2;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "token")
    protected List<String> subfacet2;

    /**
     * Gets the value of the wavelengthRange property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wavelengthRange property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getWavelengthRange().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the wavelengthRange property.
     */
    public List<String> getWavelengthRange() {
        if (wavelengthRange == null) {
            wavelengthRange = new ArrayList<>();
        }
        return this.wavelengthRange;
    }

    /**
     * Gets the value of the domain property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the domain property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getDomain().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the domain property.
     */
    public List<String> getDomain() {
        if (domain == null) {
            domain = new ArrayList<>();
        }
        return this.domain;
    }

    /**
     * Gets the value of the disciplineName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDisciplineName() {
        return disciplineName;
    }

    /**
     * Sets the value of the disciplineName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDisciplineName(String value) {
        this.disciplineName = value;
    }

    /**
     * Gets the value of the facet1 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFacet1() {
        return facet1;
    }

    /**
     * Sets the value of the facet1 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFacet1(String value) {
        this.facet1 = value;
    }

    /**
     * Gets the value of the subfacet1 property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subfacet1 property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getSubfacet1().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the subfacet1 property.
     */
    public List<String> getSubfacet1() {
        if (subfacet1 == null) {
            subfacet1 = new ArrayList<>();
        }
        return this.subfacet1;
    }

    /**
     * Gets the value of the facet2 property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFacet2() {
        return facet2;
    }

    /**
     * Sets the value of the facet2 property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFacet2(String value) {
        this.facet2 = value;
    }

    /**
     * Gets the value of the subfacet2 property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subfacet2 property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getSubfacet2().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the subfacet2 property.
     */
    public List<String> getSubfacet2() {
        if (subfacet2 == null) {
            subfacet2 = new ArrayList<>();
        }
        return this.subfacet2;
    }

}
