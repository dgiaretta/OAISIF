//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package info.oais.oaisif.pds;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 * 
 * <p>Java class for Units_of_Spectral_Radiance</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * <pre>{@code
 * <simpleType name="Units_of_Spectral_Radiance">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="W*m**-2*sr**-1*Hz**-1"/>
 *     <enumeration value="W*m**-2*sr**-1*nm**-1"/>
 *     <enumeration value="W*m**-2*sr**-1*um**-1"/>
 *     <enumeration value="W*m**-3*sr**-1"/>
 *     <enumeration value="W/m**2/sr/Hz"/>
 *     <enumeration value="W/m**2/sr/nm"/>
 *     <enumeration value="W/m**2/sr/μm"/>
 *     <enumeration value="W/m**3/sr"/>
 *     <enumeration value="uW*cm**-2*sr**-1*um**-1"/>
 *     <enumeration value="μW/cm**2/sr/μm"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "Units_of_Spectral_Radiance")
@XmlEnum
public enum UnitsOfSpectralRadiance {

    @XmlEnumValue("W*m**-2*sr**-1*Hz**-1")
    W_M_2_SR_1_HZ_1("W*m**-2*sr**-1*Hz**-1"),
    @XmlEnumValue("W*m**-2*sr**-1*nm**-1")
    W_M_2_SR_1_NM_1("W*m**-2*sr**-1*nm**-1"),
    @XmlEnumValue("W*m**-2*sr**-1*um**-1")
    W_M_2_SR_1_UM_1("W*m**-2*sr**-1*um**-1"),
    @XmlEnumValue("W*m**-3*sr**-1")
    W_M_3_SR_1("W*m**-3*sr**-1"),
    @XmlEnumValue("W/m**2/sr/Hz")
    W_M_2_SR_HZ("W/m**2/sr/Hz"),
    @XmlEnumValue("W/m**2/sr/nm")
    W_M_2_SR_NM("W/m**2/sr/nm"),
    @XmlEnumValue("W/m**2/sr/\u03bcm")
    W_M_2_SR_ΜM("W/m**2/sr/\u03bcm"),
    @XmlEnumValue("W/m**3/sr")
    W_M_3_SR("W/m**3/sr"),
    @XmlEnumValue("uW*cm**-2*sr**-1*um**-1")
    U_W_CM_2_SR_1_UM_1("uW*cm**-2*sr**-1*um**-1"),
    @XmlEnumValue("\u03bcW/cm**2/sr/\u03bcm")
    Μ_W_CM_2_SR_ΜM("\u03bcW/cm**2/sr/\u03bcm");
    private final String value;

    UnitsOfSpectralRadiance(String v) {
        value = v;
    }

    /**
     * Gets the value associated to the enum constant.
     * 
     * @return
     *     The value linked to the enum.
     */
    public String value() {
        return value;
    }

    /**
     * Gets the enum associated to the value passed as parameter.
     * 
     * @param v
     *     The value to get the enum from.
     * @return
     *     The enum which corresponds to the value, if it exists.
     * @throws IllegalArgumentException
     *     If no value matches in the enum declaration.
     */
    public static UnitsOfSpectralRadiance fromValue(String v) {
        for (UnitsOfSpectralRadiance c: UnitsOfSpectralRadiance.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
